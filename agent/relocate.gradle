

import org.gradle.api.DefaultTask
import org.gradle.api.Task
import org.gradle.api.artifacts.Configuration
import org.gradle.api.tasks.Input
import org.gradle.api.tasks.InputFiles
import org.gradle.api.tasks.TaskAction

import java.util.jar.JarFile

/**
* https://github.com/johnrengelman/shadow/blob/master/src/main/groovy/com/github/jengelman/gradle/plugins/shadow/tasks/ConfigureShadowRelocation.groovy
 * same as original but does not relocate packages containing the prefix
 * - avoid relocating twice, avoid relocated unneeded classes
*/
class ConfigureShadowRelocation extends DefaultTask {

    @Input
    DefaultTask target

    @Input
    String prefix = "shadow"


    @InputFiles
    @org.gradle.api.tasks.Optional
    List<Configuration> getConfigurations() {
        return target.configurations
    }

    @TaskAction
    void configureRelocation() {
        def packages = [] as Set<String>
        configurations.each { configuration ->
            configuration.files.each { jar ->
                JarFile jf = new JarFile(jar)
                jf.entries().each { entry ->
                    if (entry.name.endsWith(".class") && entry.name != "module-info.class") {
                        def strPackage = entry.name[0..entry.name.lastIndexOf('/') - 1].replaceAll('/', '.')
                        if (!strPackage.contains(prefix)) {
                            packages << strPackage
                        }
                    }
                }
                jf.close()
            }
        }
        packages.each {
            target.relocate(it, "${prefix}.${it}")
        }

    }

    static String taskName(Task task) {
        return "configureRelocation${task.name.capitalize()}"
    }

}


task relocateShadowJar(type: ConfigureShadowRelocation) {
    target = tasks.shadowJar
    prefix = "io.pyroscope"
}
tasks.shadowJar.dependsOn tasks.relocateShadowJar
