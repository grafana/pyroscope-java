import java.util.jar.JarFile

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'

    // https://github.com/johnrengelman/shadow
    id "com.github.johnrengelman.shadow" version "7.0.0"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}

def pyroscopeVersion = project.properties['pyroscope_version']
dependencies {
    api project(":async-profiler-context")
    implementation("com.squareup.okhttp3:okhttp:4.9.3")
    api 'com.google.protobuf:protobuf-java:3.21.1'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.7.2'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.7.2'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.10.0'
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '3.10.0'
}

jar {
    manifest {
        attributes(
                'Premain-Class': 'io.pyroscope.javaagent.PyroscopeAgent'
        )
    }
}

test {
    useJUnitPlatform()
}

java {
    withJavadocJar()
    withSourcesJar()
}

shadowJar {
    exclude 'Log4j-*'
    exclude 'META-INF/org/apache/logging/log4j/**'
    exclude 'META-INF/services/**'

    from("$buildDir/async-profiler/native") {
        include "**.so"
        include "**.so.sha1"
    }

    archiveFileName = "pyroscope.jar"

    minimize()
    archiveClassifier.set('')

}

apply from: "relocate.gradle"

publishing {
    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
            groupId = 'io.pyroscope'
            artifactId = 'agent'
            version = pyroscopeVersion
            artifacts = [ shadowJar, javadocJar, sourcesJar ]
            pom {
                name = 'Pyroscope Java agent'
                description = 'The Java profiling agent for Pyroscope.io. Based on async-profiler.'
                url = 'https://pyroscope.io'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'pyroscope'
                        name = 'Pyroscope'
                        email = 'anatoly@pyroscope.io'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/pyroscope-io/pyroscope-java.git'
                    developerConnection = 'scm:git:ssh://github.com/pyroscope-io/pyroscope-java.git'
                    url = 'https://github.com/pyroscope-io/pyroscope-java'
                }
            }
        }
    }
    repositories {
        maven {
            credentials {
                username project.hasProperty('nexusUsername') ? project.nexusUsername : ''
                password project.hasProperty('nexusPassword') ? project.nexusPassword : ''
            }
            url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
        }
    }
}

signing {
    sign publishing.publications.shadow
}
