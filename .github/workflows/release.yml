name: Release

on:
  workflow_dispatch:
    inputs:
      version_bump:
        description: 'Version Bump Type'
        required: true
        default: 'minor'
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Get secrets
        uses: grafana/shared-workflows/actions/get-vault-secrets@fa48192dac470ae356b3f7007229f3ac28c48a25
        with:
          repo_secrets: |
            NEXUS_USERNAME=publishing:nexus_username
            NEXUS_PASSWORD=publishing:nexus_password
            NEXUS_GPG_KEY_ID=publishing:nexus_gpg_key_id
            NEXUS_GPG_PASSWORD=publishing:nexus_gpg_password
            NEXUS_GPG_SECRING_FILE_BASE64=publishing:nexus_gpg_secring_file
            GITHUB_APP_ID=pyroscope-development-app:app-id
            GITHUB_APP_PRIVATE_KEY=pyroscope-development-app:app-private-key

      - name: Generate GitHub token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ env.GITHUB_APP_ID }}
          private-key: ${{ env.GITHUB_APP_PRIVATE_KEY }}

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ steps.app-token.outputs.token }}
          persist-credentials: true # push the tag later

      - name: Set up Java 8
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Bump Version
        id: bump_version
        env:
          VERSION_BUMP: ${{ inputs.version_bump }}
        run: |
          current_version=$(grep 'pyroscope_version=' gradle.properties | cut -d'=' -f2)
          echo "Current version: $current_version"
          IFS='.' read -r major minor patch <<< "$current_version"

          case "$VERSION_BUMP" in
            "major")
              major=$((major + 1))
              minor=0
              patch=0
              ;;
            "minor")
              minor=$((minor + 1))
              patch=0
              ;;
            "patch")
              patch=$((patch + 1))
              ;;
          esac

          new_version="${major}.${minor}.${patch}"
          echo "New version: $new_version"

          sed -i "s/pyroscope_version=.*/pyroscope_version=$new_version/" gradle.properties
          echo "version=$new_version" >> $GITHUB_OUTPUT

      - name: Prepare GPG Keyring
        id: prepare_gpg_keyring
        run: |
          mkdir -p ${{ github.workspace }}/gpg
          echo "$NEXUS_GPG_SECRING_FILE_BASE64" | base64 -d > ${{ github.workspace }}/gpg/secring.gpg
          chmod 600 ${{ github.workspace }}/gpg/secring.gpg
          echo "keyring_path=${{ github.workspace }}/gpg/secring.gpg" >> $GITHUB_OUTPUT

      - name: Build and Publish
        env:
          NEXUS_GPG_SECRING_FILE: ${{ steps.prepare_gpg_keyring.outputs.keyring_path }}
        run: |
          make publish

      - name: Get GitHub App User ID
        id: get-user-id
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          APP_SLUG: ${{ steps.app-token.outputs.app-slug }}
        run: |
          APP_BOT="${APP_SLUG}[bot]"
          echo "user-id=$(gh api "/users/${APP_BOT}" --jq .id)" >> "$GITHUB_OUTPUT"

      - name: Commit Version Bump
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          APP_SLUG: ${{ steps.app-token.outputs.app-slug }}
          USER_ID: ${{ steps.get-user-id.outputs.user-id }}
          VERSION: ${{ steps.bump_version.outputs.version }}
        run: |
          APP_BOT="${APP_SLUG}[bot]"
          git config --global user.name "${APP_BOT}"
          git config --global user.email "${USER_ID}+${APP_BOT}@users.noreply.github.com"
          git add gradle.properties
          git commit -m "version ${VERSION}"
          git tag "v${VERSION}"
          git push --atomic origin "refs/heads/main" "refs/tags/v${VERSION}"

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          VERSION: ${{ steps.bump_version.outputs.version }}
        run: |
          gh release create "v${VERSION}" \
            agent/build/libs/pyroscope.jar \
            --title "Release v${VERSION}" \
            --notes "Automated release"
